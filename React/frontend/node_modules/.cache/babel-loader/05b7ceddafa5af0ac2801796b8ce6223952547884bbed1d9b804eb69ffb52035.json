{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\BITS PILANI\\\\FSD\\\\Assignment_1\\\\React\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport API from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('access_token');\n    if (storedUser && token) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await API.post('auth/login/', {\n        username,\n        password\n      });\n      const {\n        access,\n        refresh,\n        user\n      } = response.data;\n      localStorage.setItem('access_token', access);\n      localStorage.setItem('refresh_token', refresh);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","API","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","storedUser","localStorage","getItem","token","JSON","parse","login","username","password","response","post","access","refresh","data","setItem","stringify","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/BITS PILANI/FSD/Assignment_1/React/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport API from '../api/axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        // Check if user is already logged in\r\n        const storedUser = localStorage.getItem('user');\r\n        const token = localStorage.getItem('access_token');\r\n        \r\n        if (storedUser && token) {\r\n            setUser(JSON.parse(storedUser));\r\n        }\r\n        \r\n        setLoading(false);\r\n    }, []);\r\n    \r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await API.post('auth/login/', { username, password });\r\n            const { access, refresh, user } = response.data;\r\n            \r\n            localStorage.setItem('access_token', access);\r\n            localStorage.setItem('refresh_token', refresh);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            \r\n            setUser(user);\r\n            return true;\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    const logout = () => {\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('refresh_token');\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n    \r\n    return (\r\n        <AuthContext.Provider value={{ user, loading, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAElD,IAAIF,UAAU,IAAIG,KAAK,EAAE;MACrBN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;IACnC;IAEAD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,IAAI,CAAC,aAAa,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACtE,MAAM;QAAEG,MAAM;QAAEC,OAAO;QAAEhB;MAAK,CAAC,GAAGa,QAAQ,CAACI,IAAI;MAE/CZ,YAAY,CAACa,OAAO,CAAC,cAAc,EAAEH,MAAM,CAAC;MAC5CV,YAAY,CAACa,OAAO,CAAC,eAAe,EAAEF,OAAO,CAAC;MAC9CX,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACnB,IAAI,CAAC,CAAC;MAElDC,OAAO,CAACD,IAAI,CAAC;MACb,OAAO,IAAI;IACf,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjBjB,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC;IACvClB,YAAY,CAACkB,UAAU,CAAC,eAAe,CAAC;IACxClB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;IAC/BtB,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEE,OAAO;MAAEQ,KAAK;MAAEY;IAAO,CAAE;IAAAxB,QAAA,EACzDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC9B,EAAA,CA7CWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}