{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\BITS PILANI\\\\FSD\\\\Assignment_1\\\\React\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on component mount\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    const token = localStorage.getItem('access_token');\n    if (user && token) {\n      setUser(JSON.parse(user));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      // For demo purposes, accept any username/password\n      if (username === 'admin' && password === 'admin') {\n        const mockUser = {\n          id: 1,\n          username: 'admin',\n          is_coordinator: true\n        };\n        const mockToken = 'mock-token-for-demo';\n\n        // Store in localStorage\n        localStorage.setItem('user', JSON.stringify(mockUser));\n        localStorage.setItem('access_token', mockToken);\n\n        // Set auth header\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        setUser(mockUser);\n        return true;\n      }\n\n      // In a real app, make an API call:\n      // const response = await axios.post('/api/auth/login/', { username, password });\n      // const { access, refresh, user } = response.data;\n      // localStorage.setItem('access_token', access);\n      // ...\n\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","localStorage","getItem","token","JSON","parse","defaults","headers","common","login","username","password","mockUser","id","is_coordinator","mockToken","setItem","stringify","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/BITS PILANI/FSD/Assignment_1/React/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Check if user is already logged in on component mount\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('user');\r\n    const token = localStorage.getItem('access_token');\r\n    \r\n    if (user && token) {\r\n      setUser(JSON.parse(user));\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n  \r\n  // Login function\r\n  const login = async (username, password) => {\r\n    try {\r\n      // For demo purposes, accept any username/password\r\n      if (username === 'admin' && password === 'admin') {\r\n        const mockUser = { id: 1, username: 'admin', is_coordinator: true };\r\n        const mockToken = 'mock-token-for-demo';\r\n        \r\n        // Store in localStorage\r\n        localStorage.setItem('user', JSON.stringify(mockUser));\r\n        localStorage.setItem('access_token', mockToken);\r\n        \r\n        // Set auth header\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\r\n        \r\n        setUser(mockUser);\r\n        return true;\r\n      }\r\n      \r\n      // In a real app, make an API call:\r\n      // const response = await axios.post('/api/auth/login/', { username, password });\r\n      // const { access, refresh, user } = response.data;\r\n      // localStorage.setItem('access_token', access);\r\n      // ...\r\n      \r\n      return false;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('refresh_token');\r\n    localStorage.removeItem('user');\r\n    \r\n    delete axios.defaults.headers.common['Authorization'];\r\n    \r\n    setUser(null);\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAGI,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAElD,IAAIL,IAAI,IAAIM,KAAK,EAAE;MACjBL,OAAO,CAACM,IAAI,CAACC,KAAK,CAACR,IAAI,CAAC,CAAC;MACzBP,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;IACpE;IAEAH,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF;MACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;QAChD,MAAMC,QAAQ,GAAG;UAAEC,EAAE,EAAE,CAAC;UAAEH,QAAQ,EAAE,OAAO;UAAEI,cAAc,EAAE;QAAK,CAAC;QACnE,MAAMC,SAAS,GAAG,qBAAqB;;QAEvC;QACAd,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACL,QAAQ,CAAC,CAAC;QACtDX,YAAY,CAACe,OAAO,CAAC,cAAc,EAAED,SAAS,CAAC;;QAE/C;QACAzB,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUO,SAAS,EAAE;QAEtEjB,OAAO,CAACc,QAAQ,CAAC;QACjB,OAAO,IAAI;MACb;;MAEA;MACA;MACA;MACA;MACA;;MAEA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBnB,YAAY,CAACoB,UAAU,CAAC,cAAc,CAAC;IACvCpB,YAAY,CAACoB,UAAU,CAAC,eAAe,CAAC;IACxCpB,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;IAE/B,OAAO/B,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IAErDV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEE,OAAO;MAAEU,KAAK;MAAEW;IAAO,CAAE;IAAAzB,QAAA,EAC3DA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CAjEWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}